-- Create database
CREATE DATABASE IF NOT EXISTS walmartSales;


-- Create table
CREATE TABLE IF NOT EXISTS sales(
	invoice_id VARCHAR(30) NOT NULL PRIMARY KEY,
    branch VARCHAR(5) NOT NULL,
    city VARCHAR(30) NOT NULL,
    customer_type VARCHAR(30) NOT NULL,
    gender VARCHAR(30) NOT NULL,
    product_line VARCHAR(100) NOT NULL,
    unit_price DECIMAL(10,2) NOT NULL,
    quantity INT NOT NULL,
    tax_pct FLOAT(6,4) NOT NULL,
    total DECIMAL(12, 4) NOT NULL,
    date DATETIME NOT NULL,
    time TIME NOT NULL,
    payment VARCHAR(15) NOT NULL,
    cogs DECIMAL(10,2) NOT NULL,
    gross_margin_pct FLOAT(11,9),
    gross_income DECIMAL(12, 4),
    rating FLOAT(2, 1)
);

-- Data cleaning
SELECT
	*
FROM sales;


-- Add the time_of_day column

ALTER TABLE sales ADD COLUMN time_of_day VARCHAR(20);

UPDATE sales
SET time_of_day = (
	CASE
		WHEN `time` BETWEEN "00:00:00" AND "12:00:00" THEN "Morning"
        WHEN `time` BETWEEN "12:01:00" AND "16:00:00" THEN "Afternoon"
        ELSE "Evening"
    END
);

-- Add day_name column

ALTER TABLE sales ADD COLUMN day_name VARCHAR(20);

UPDATE sales
SET day_name = DAYNAME(STR_TO_DATE(date, '%d-%m-%Y'));

-- Add month_name column


ALTER TABLE sales ADD COLUMN month_name VARCHAR(20);

UPDATE sales
SET month_name = MONTHNAME(STR_TO_DATE(date, '%d-%m-%Y'));

### Generic Question

1. How many unique cities does the data have?

SELECT DISTINCT
    city
FROM
    sales

2. In which city is each branch?

 ELECT 
    city, COUNT(branch) AS gtotal_branch
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC


### Product

1. How many unique product lines does the data have?
SELECT DISTINCT
    Product_line
FROM
    sales

2. What is the most common payment method?

SELECT 
    Payment, COUNT(*)
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC
3. What is the most selling product line?

SELECT 
    product_line, ROUND(SUM(total)) AS total_sale
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC
4. What is the total revenue by month?
ELECT 
    month_name, ROUND(SUM(Total)) AS total_sale
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC
5. What month had the largest COGS?
SELECT 
    month_name, ROUND(SUM(cogs)) AS total_revenue
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC

6. What product line had the largest revenue?

SELECT 
    Product_line, ROUND(SUM(total)) AS total_revenue
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC

7. What is the city with the largest revenue?
SELECT 
    city, branch, ROUND(SUM(total)) AS total_revuenue
FROM
    sales
GROUP BY 1 , 2
ORDER BY 3 DESC
8. What product line had the largest VAT?

SELECT 
    product_line, ROUND(AVG(Tax)) AS avg_tax
FROM
    sales
GROUP BY 1
ORDER BY 2


9. Fetch each product line and add a column to those product line showing "Good", "Bad". Good if its greater than average sales
SELECT 
    product _line,
    (CASE
        WHEN AVG(quantity) > 6 THEN 'good'
        ELSE 'bad'
    END) AS remark
FROM
    sales
GROUP BY 1


10. Which branch sold more products than average product sold?

SELECT 
    branch, SUM(quantity) AS quantty
FROM
    sales
GROUP BY 1
HAVING SUM(quantity) > (SELECT 
        AVG(quantity)
    FROM
        sales);


11. What is the most common product line by gender?

SELECT 
    product_line, gender, COUNT(gender) AS total_count
FROM
    sales
GROUP BY 1 , 2
ORDER BY 3 DESC


12. What is the average rating of each product line?

SELECT 
    product_line, ROUND(AVG(rating), 2) AS avg_rating
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC

### Sales

1. Number of sales made in each time of the day per weekday
SELECT 
    time_of_day, COUNT(quantity) AS total_qqty
FROM
    sales
WHERE
    day_name = 'sunday'
GROUP BY 1
ORDER BY 3 DESC


2. Which of the customer types brings the most revenue?
SELECT 
    Customer_type, total
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC

3. Which city has the largest tax percent/ VAT (**Value Added Tax**)?
SELECT 
    city, ROUND(AVG(tax), 2)
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC

4. Which customer type pays the most in VAT?
SELECT 
    Customer_type, ROUND(AVG(tax), 2)
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC

### Customer

1. How many unique customer types does the data have?
SELECT DISTINCT
    Customer_type
FROM
    sales
2. How many unique payment methods does the data have?
SELECT DISTINCT
    payment
FROM
    sales

3. What is the most common customer type?
ELECT 
    Customer_type, COUNT(*)
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1

4. Which customer type buys the most?
SELECT 
    Customer_type, sum(total) , count(Quantity) as total_sales
FROM
    sales
GROUP BY 1
ORDER BY 2, 3 DESC
LIMIT 1

5. What is the gender of most of the customers?
ELECT 
    gender, round(sum(total), 2)
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC

6. What is the gender distribution per branch?
SELECT
	gender,
	COUNT(*) as gender_cnt
FROM sales
WHERE branch = "C"
GROUP BY 1
ORDER BY 2 DESC;

7. Which time of the day do customers give most ratings?
SELECT 
    time_of_day, ROUND(AVG(rating), 2) as rating
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC

8. Which time of the day do customers give most ratings per branch?
ELECT 
    time_of_day, ROUND(AVG(rating), 2) as rating
FROM
    sales
    where branch = 'c'
GROUP BY 1
ORDER BY 2 DESC


9. Which day fo the week has the best avg ratings?
SELECT 
    day_name, ROUND(AVG(rating), 2) AS rating
FROM
    sales
GROUP BY 1
ORDER BY 2 DESC

10. Which day of the week has the best average ratings per branch?
SELECT 
    day_name, round(AVG(rating), 2) AS rating
FROM
    sales
WHERE
    Branch = 'A'
GROUP BY 1
ORDER BY 2 DESC



